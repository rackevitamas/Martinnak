[
  {
    "ContainingType": "Kreata.Backend.Controllers.DolgozoController",
    "Method": "SelectAllDrinkAsync",
    "RelativePath": "api/Dolgozo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Kreata.Backend.Controllers.DolgozoController",
    "Method": "GetBy",
    "RelativePath": "api/Dolgozo/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Kreata.Backend.Controllers.DolgozoController",
    "Method": "UpdateDolgozo",
    "RelativePath": "api/Dolgozo/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updatedDolgozo",
        "Type": "Kreata.Backend.Datas.Entities.Dolgozo",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Kreata.Backend.Controllers.DrinkController",
    "Method": "SelectAllDrinkAsync",
    "RelativePath": "api/Drink",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Kreata.Backend.Controllers.DrinkController",
    "Method": "GetBy",
    "RelativePath": "api/Drink/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Kreata.Backend.Controllers.DrinkController",
    "Method": "UpdateDrink",
    "RelativePath": "api/Drink/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updatedDrink",
        "Type": "Kreata.Backend.Datas.Entities.Drink",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Kreata.Backend.Controllers.ProductController",
    "Method": "SelectAllProductAsync",
    "RelativePath": "api/Product",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Kreata.Backend.Controllers.ProductController",
    "Method": "GetBy",
    "RelativePath": "api/Product/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Kreata.Backend.Controllers.ProductController",
    "Method": "UpdateProduct",
    "RelativePath": "api/Product/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updatedProduct",
        "Type": "Kreata.Backend.Datas.Entities.Product",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Kreata.Backend.Controllers.StudentController",
    "Method": "SelectAllRecordToListAsync",
    "RelativePath": "api/Student",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Kreata.Backend.Controllers.StudentController",
    "Method": "GetBy",
    "RelativePath": "api/Student/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Kreata.Backend.Controllers.StudentController",
    "Method": "UpdateStudent",
    "RelativePath": "api/Student/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updatedStudent",
        "Type": "Kreata.Backend.Datas.Entities.Student",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TeacherController",
    "Method": "SelectAllRecordToListAsync",
    "RelativePath": "api/Teacher",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TeacherController",
    "Method": "GetBy",
    "RelativePath": "api/Teacher/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TeacherController",
    "Method": "UpdateTeacher",
    "RelativePath": "api/Teacher/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updatedTeacher",
        "Type": "Kreata.Backend.Datas.Entities.Teacher",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Kreata.Backend.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Kreata.Backend.WeatherForecast, Kreata.Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]